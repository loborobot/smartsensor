//#include <StringStream.h>

/*#include <GSM.h>
#include <EEPROMEx.h>
#include <Time.h>
#include <TimeAlarms.h>
//#include <StackList.h>
#include <Vector.h>

#define memoryBase_0 0 
#define memoryBase_1 1
#define memoryBase_2 10
#define memoryBase_3 20*/



//EEPROM externa
//#include <EEPROMex.h>
//#include <EEPROMvar.h>
//declarar
#include <EEPROM.h>

String remoteData;
//char* uno2;
    int uno1a; 
    int uno1b; 
    int uno2a;
    int uno2b;  
    int uno3a; 
    int uno3b;  
    int uno4a;
    int uno4b;  
    int uno5a;  
    int uno5b;  
    int uno6a;  
    int uno6b;  

    String IDT;  //ID TXT
    String IDN;  //ID #  
    String ENBT;  //Enable TXT  
    String ENBN;  //Enable #
    String TIST;  //Time start TXT
    String TISN;  //Time start #
    String TIET;  //Time end TXT
    String TIEN;  //Time end #
    String TIMT;  //Time TXT
    String TIMN;  //Time #
    String FRET;  //Frequency TXT
    String FREN;  //Frequency #

void setup(){
  
  Serial.begin(9600);
}
void loop(){
  if( Serial.available()){
    char c = Serial.read();
    //Serial.println(c);
    remoteData +=c;
//    for(int i=0;i<100;i++){
    procesodata();
//    delay(100);
//    }
//    save();

  }



}

int procesodata(){
  
  String uno = remoteData;
   
  remoteData.trim();
  
  IDT = uno.substring(1,uno.indexOf(':'));
  uno  = uno.substring(uno.indexOf(':')+1,uno.length());
  IDN = uno.substring(0,uno.indexOf(','));
  uno  = uno.substring(uno.indexOf(',')+1,uno.length());
  ENBT = uno.substring(0,uno.indexOf(':'));
  uno  = uno.substring(uno.indexOf(':')+1,uno.length());
  ENBN = uno.substring(0,uno.indexOf(','));
  uno  = uno.substring(uno.indexOf(',')+1,uno.length());
  TIST = uno.substring(0,uno.indexOf(':'));
  uno  = uno.substring(uno.indexOf(':')+1,uno.length());
  TISN = uno.substring(0,uno.indexOf(','));
  uno  = uno.substring(uno.indexOf(',')+1,uno.length());
  TIET = uno.substring(0,uno.indexOf(':'));
  uno  = uno.substring(uno.indexOf(':')+1,uno.length());
  TIEN = uno.substring(0,uno.indexOf(','));
  uno  = uno.substring(uno.indexOf(',')+1,uno.length());
  TIMT = uno.substring(0,uno.indexOf(':'));
  uno  = uno.substring(uno.indexOf(':')+1,uno.length());
  TIMN = uno.substring(0,uno.indexOf(','));
  uno  = uno.substring(uno.indexOf(',')+1,uno.length());
  FRET = uno.substring(0,uno.indexOf(':'));
  uno  = uno.substring(uno.indexOf(':')+1,uno.length());
  FREN = uno.substring(0,uno.indexOf('}'));



  Serial.println(IDT);
  Serial.println(IDN);
  Serial.println(ENBT);
  Serial.println(ENBN);
  Serial.println(TIST);
  Serial.println(TISN);
  Serial.println(TIET);
  Serial.println(TIEN);
  Serial.println(TIMT);
  Serial.println(TIMN);
  Serial.println(FRET);
  Serial.println(FREN);






 // uno8 = uno.substring(0,uno.indexOf(','));
 // uno  = uno.substring(uno.indexOf('}')+1,uno.length());
//Serial.println(uno);
/*  if(uno=="/n"){
  
    save();
  
  }*/

//save();


// write the value to the appropriate byte of the EEPROM.
  // these values will remain there when the board is
  // turned off.
//  EEPROM.write(0,uno1);
         
}//7k


/*void save(){

if(uno1="sheduler"){
  

//  uno1a=uno1.toInt();  
  uno2a=uno2.toInt();  
//  uno3a=uno3.toInt();  
  uno4a=uno4.toInt();  
//  uno5a=uno5.toInt();  
  uno6a=uno6.toInt();  
//  uno7a=uno7.toInt();  
  uno8a=uno8.toInt();  

//     Serial.println(uno1a);
     Serial.println(uno2a);
//     Serial.println(uno3a);
     Serial.println(uno4a);
//     Serial.println(uno5a);
     Serial.println(uno6a);
//     Serial.println(uno7a);
     Serial.println(uno8a);
  } 
  else{
  //nothing
  }
}*/


//alarma
/*void createAlarm(byte id, const timeDayOfWeek_t dw, const int h_start, const int m_start, const int h_end, 
                    const int m_end, byte rele, boolean enabled){
    
    Alarm_t alr = {id, dw, h_start, m_start, h_end, m_end, rele, enabled};
    
    //startAlarm(dw, h_start, m_start, rele);
    //finishAlarm(dw, h_end, m_end, rele); 
                      
    EEPROM.writeBlock(id, alr);                       
}

void startAlarm(const timeDayOfWeek_t dw, const int h, const int m, int rele) {
   activate_rele = rele;
   Alarm.alarmRepeat(dw, h, m, 0, turnOnPort); 

   Serial.print("the alarm will turn on the day ");
   Serial.print(dw);
   Serial.print(" hour ");
   Serial.print(h);
   Serial.print(":");
   Serial.print(m);   
   Serial.print(" for port ");
   Serial.println(activate_rele);
   
  //Alarm.alarmRepeat(1, 10, 30, turnOffPort);
}

void finishAlarm(const timeDayOfWeek_t dw, const int h, const int m, byte rele){
  activate_rele = rele;
  Alarm.alarmRepeat(dw, h, m, 0, turnOffPort);
  Serial.print("the alarm will turn off the day ");
  Serial.print(dw);
  Serial.print(" hour ");
  Serial.print(h);
  Serial.print(":");
  Serial.print(m);   
  Serial.print(" for port ");
  Serial.println(activate_rele);

}*/
